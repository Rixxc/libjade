from Jade require "crypto_sign/ed25519/amd64/common/64/add4.jinc"
from Jade require "crypto_sign/ed25519/amd64/common/64/sub4.jinc"
require "sc25519_window4.jinc"
require "ge25519_nielsadd2.jinc"
require "choose_t.jinc"

fn ge25519_scalarmult_base(reg ptr u64[16] r, reg u64 s0 s1 s2 s3) -> reg ptr u64[16]
{
  stack u8[64] b;
  stack u64[12] t;
  reg ptr u64[12] tp;
  stack ptr u64[12] ts;
  stack ptr u64[16] rps;
  reg u64[4] d s rr;
  stack u64[4] ds rs;
  reg u8 b_8;
  reg u64 b_arg pos_arg;
	inline int i;
	
	s[0] = s0;
	s[1] = s1;
	s[2] = s2;
	s[3] = s3;
	
  b = sc25519_window4(s);

	b_8 = b[0];
  b_arg = (64s) b_8;
	pos_arg = 0;
  r[0:12] = choose_t(r[0:12], pos_arg, b_arg);
  rr[0] = r[4];
  rr[1] = r[5];
  rr[2] = r[6];
  rr[3] = r[7];
  rs = #copy(rr);
  rr[0] = r[0];
  rr[1] = r[1];
  rr[2] = r[2];
  rr[3] = r[3];
  
  ds = __sub4_ssr(rs, rr);
  rr = __add4_rsr(rs, rr);
  r[4] = rr[0];
  r[5] = rr[1];
  r[6] = rr[2];
  r[7] = rr[3];
  
  rr[0] = ds[0];
  rr[1] = ds[1];
  rr[2] = ds[2];
  rr[3] = ds[3];
  r[0] = rr[0];
  r[1] = rr[1];
  r[2] = rr[2];
  r[3] = rr[3];
  
  rr[0] = r[8];
  rr[1] = r[9];
  rr[2] = r[10];
  rr[3] = r[11];
  r[12] = rr[0];
  r[13] = rr[1];
  r[14] = rr[2];
  r[15] = rr[3];
  
  r[8] = 2;
  r[9] = 0;
  r[10] = 0;
  r[11] = 0;
  

  for i=1 to 64
  {
  	rps = r;
  	b_arg = (64s) b[i];
  	pos_arg = i;
    tp = t;
    tp = choose_t(tp, pos_arg, b_arg);
    t = tp;
    r = rps;
    r = ge25519_nielsadd2(tp, r);
  }
  return r;
}

inline fn __ge25519_scalarmult_base(reg ptr u64[16] r, reg u64[4] s) -> reg ptr u64[16]
{
	reg u64 s0 s1 s2 s3;
	
	s0 = s[0];
	s1 = s[1];
	s2 = s[2];
	s3 = s[3];
	
	r = ge25519_scalarmult_base(r, s0, s1, s2, s3);
	
	return r;
}
